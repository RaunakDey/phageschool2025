{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Summer School","text":""},{"location":"#quantitative-phagebacteria-dynamics-across-scales","title":"Quantitative Phage\u2013Bacteria Dynamics Across Scales","text":"<p>\ud83d\udccd June 23\u201327, 2025 \ud83d\udccd University of Maryland, College Park</p> <p>Phage transform the fate of cells, populations, and ecosystems. Building on the interdisciplinary OLife workshops in Paris (2022 &amp; 2024), this summer school brings together researchers integrating models, experiments, and field data to explore the rich dynamics of phage\u2013bacteria interactions across biological scales.</p>"},{"location":"#objectives","title":"\ud83c\udfaf Objectives","text":"<p>Participants will: - Learn fundamental and cutting-edge methods in phage\u2013bacteria modeling - Explore mechanisms in spatial dynamics, phage therapy, evolution, and ecosystem functioning - Work with real data through computational labs and problem-solving exercises - Bridge models with empirical data using Python or R</p>"},{"location":"#daily-schedule-highlights","title":"\ud83d\udcc5 Daily Schedule Highlights","text":"<ul> <li>\u2600\ufe0f Morning \u2014 Lectures by leading experts</li> <li>\ud83d\udda5\ufe0f Afternoon \u2014 Hands-on computational labs</li> <li>\ud83c\udf19 Evening \u2014 Plenary talks or poster sessions</li> </ul>"},{"location":"#lecturers-speakers","title":"\ud83d\udc69\u200d\ud83c\udfeb Lecturers &amp; Speakers","text":"<ul> <li>Stephen Beckett (UMD)  </li> <li>Alita Burmeister (UW-Milwaukee)  </li> <li>Waqas Chaudhry (Tolka AI)  </li> <li>Tapan Goel (UMD)  </li> <li>Ido Golding (UIUC)  </li> <li>Jacopo Marchi (UMD)  </li> <li>Justin Meyer (UC San Diego)  </li> <li>Namiko Mitarai (Niels Bohr Institute)  </li> <li>Daniel Muratore (Santa Fe Institute)  </li> <li>Carey Nadell (Dartmouth College)  </li> <li>Sarah Preheim (JHU)  </li> <li>Paul Turner (Yale University)  </li> <li>Joshua Weitz (UMD)  </li> </ul>"},{"location":"#scientific-committee-chair","title":"\ud83e\udde0 Scientific Committee Chair","text":"<p>Joshua Weitz (UMD)</p>"},{"location":"#computational-lab-lead","title":"\ud83e\uddea Computational Lab Lead","text":"<p>Marian Dominguez-Mirazo (UMD)</p>"},{"location":"#eligibility","title":"\u2705 Eligibility","text":"<ul> <li>Open to MS, PhD, and postdoc-level scientists</li> <li>Background in life sciences, physics, engineering, computer science, or mathematics</li> <li>Familiarity with Unix/Linux and proficiency in Python or R required  </li> <li>No registration fee for accepted participants</li> </ul>"},{"location":"#travel-application","title":"\ud83e\uddf3 Travel &amp; Application","text":"<ul> <li>Travel awards available  </li> <li>Applications must include:</li> <li>CV</li> <li>Motivation letter</li> <li>Letter of support</li> </ul> <p>\ud83d\udd17 Apply here \ud83d\udd52 Deadline: March 21, 2025</p>"},{"location":"#hosted-by","title":"\ud83e\uddec Hosted By:","text":"<ul> <li>BRIN Mathematics Research Center  </li> <li>College of Computer, Mathematical, and Natural Sciences  </li> <li>Institute for Health Computing</li> </ul> <p>\u201cIntegrating computational methods and models into phage-bacteria research practice, across scales.\u201d</p>"},{"location":"day1_eco_evo_principles/python_notebook_day1/","title":"Eco Evo Dynamics","text":"<p>If you need installation help you can read the documentation here or ask one of the TAs.</p> <p>Once you have a lot of commands, it will get exhausting typing them again and again (especially when you make mistakes). Instead, you will want to use a \\script\". A script is a list of commands in a \u2002le that you can execute directly from the command window. To create a script go to the File menu and select New &gt; File. Now type in a few commands, such as:</p> In\u00a0[1]: Copied! <pre>#my_first_file.py\nimport numpy as np\nimport matplotlib.pyplot as plt\n# Create some vectors\nx = np.arange(1,10,0.1)\ny1 = np.exp(0.5*x)\ny2 = np.exp(0.6*x)\n#plot the vectors\nplt.plot(x,y1,'k') #Use a black line\nplt.plot(x,y2,c=[0.5,0.5,0.5]) #Use a grey line\nplt.xlabel('x') #Label the axis\nplt.ylabel('y')\n#save the image to a file\nplt.savefig('my_first.pdf',bbox_inches='tight')\n</pre> #my_first_file.py import numpy as np import matplotlib.pyplot as plt # Create some vectors x = np.arange(1,10,0.1) y1 = np.exp(0.5*x) y2 = np.exp(0.6*x) #plot the vectors plt.plot(x,y1,'k') #Use a black line plt.plot(x,y2,c=[0.5,0.5,0.5]) #Use a grey line plt.xlabel('x') #Label the axis plt.ylabel('y') #save the image to a file plt.savefig('my_first.pdf',bbox_inches='tight') <p>The problem with this script is that changing the arguments in the exponential functions requires editing the script and then re-running the code. It would be more convenient to designate a variable change from the command window and have the code automatically update its output. The problem is that a script cannot return a variable or accept a variable as input. To do so requires a \"function\". Functions are program \u2002les that can be called from the Command window, can accept inputs, and return outputs. To start one, open a new\u2002file and type:</p> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"day1_eco_evo_principles/python_notebook_day1/#eco-evo-dynamics","title":"Eco Evo Dynamics\u00b6","text":""},{"location":"day1_eco_evo_principles/python_notebook_day1/#prof-joshua-weitz-dr-marian-dominguez-mirazo","title":"Prof. Joshua Weitz, Dr. Marian Dominguez-Mirazo\u00b6","text":""},{"location":"day1_eco_evo_principles/python_notebook_day1/#day-1-june-23-2025","title":"Day 1 (June 23, 2025)\u00b6","text":""},{"location":"day1_eco_evo_principles/python_notebook_day1/#building-programs-from-scripts-and-functions","title":"Building \"Programs\" from \"Scripts\" and \"Functions\"\u00b6","text":""}]}